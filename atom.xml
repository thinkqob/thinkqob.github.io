<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[thinkqob.github.io]]></title>
  <subtitle><![CDATA[Learn Programming]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://thinkqob.github.io/"/>
  <updated>2015-11-26T14:54:20.563Z</updated>
  <id>http://thinkqob.github.io/</id>
  
  <author>
    <name><![CDATA[Thinkqob]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Learn-Python-0002]]></title>
    <link href="http://thinkqob.github.io/2015/11/26/learn-python-0002/"/>
    <id>http://thinkqob.github.io/2015/11/26/learn-python-0002/</id>
    <published>2015-11-26T14:54:20.563Z</published>
    <updated>2015-11-26T14:54:20.563Z</updated>
    <content type="html"><![CDATA[<p>还在看CS for All，已经看到第六章了，一共七章，第五章讲函数，第六章讲面向对象编程，前面讲讲Class看的还挺明白的，后面开始讲了一些VPython的东西就看不太明白了，简单的看了一下，直接跳过看结尾，然后看下一章。之前第四章讲内存寄存器汇编什么的，也是看了一部分就直接跳过了。这章的VPython也直接跳过吧，继续往下看，碰到问题再回过头来认真看看，或者在其他书中会覆盖到这些知识点。</p>
<p>又翻了一下编程入门指南 v1.4和CoCode社区上的学习历程帖子。相比其他人我的时间其实是很多的，但是效率太低，CS for All一边查单词一边看，虽然能理解大部分，但是看的还是慢，要提高效率了。之前看LearnPythontheHardWay也是看了两遍也还是没能完全的理解。不过还是给看CS for ALL打下了一个基础，不然现在会看的很累。</p>
<p>今天看完第六章，明天开始看第七章，这周末把CS for ALL看完，然后再决定看视频或者还是Python核心编程。总之就是要保证效率的前提下抓紧时间看书和练习。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>还在看CS for All，已经看到第六章了，一共七章，第五章讲函数，第六章讲面向对象编程，前面讲讲Class看的还挺明白的，后面开始讲了一些VPython的东西就看不太明白了，简单的看了一下，直接跳过看结尾，然后看下一章。之前第四章讲内存寄存器汇编什么的，也是看了一部分就]]>
    </summary>
    
      <category term="learn" scheme="http://thinkqob.github.io/tags/learn/"/>
    
      <category term="python" scheme="http://thinkqob.github.io/tags/python/"/>
    
      <category term="Python" scheme="http://thinkqob.github.io/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn-Python-0001]]></title>
    <link href="http://thinkqob.github.io/2015/11/18/learn-python-0001/"/>
    <id>http://thinkqob.github.io/2015/11/18/learn-python-0001/</id>
    <published>2015-11-18T08:50:21.198Z</published>
    <updated>2015-11-18T08:50:21.198Z</updated>
    <content type="html"><![CDATA[<p>在看<a href="https://www.cs.hmc.edu/csforall/" target="_blank" rel="external">CS for All</a> 第五章，最后他给的那段代码我发现好多不一样的地方，是不一样但并不一定是错误。在open文件时候附带r和w的时候，上面写的是”r”下面是’w’。这个单双引号的问题估计问题不大但我觉得还是要一致的好，所以我都用单引号。另一个问题是在这段代码里的输入用的是input，因为之前书里都是用的raw_input，也就是说默认用的是python2，但是不一样的地方他也会提醒你说python3里面应该用什么，但是这段代码直接就用了python3？我也不确定。</p>
<p>另一个问题就是在用pycharm敲代码的时候，这本书里面的Function Name喜欢用首字母大写字符串，这个pycharm会有提醒的，pycharm还会提醒函数之间要用两个空白行来分隔。然后去搜了搜python的编码规范，太复杂的也看不懂，python还没学会。</p>
<p><a href="http://jasonding1354.github.io/2015/01/23/Python/%E3%80%90python%E3%80%91Python%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/" target="_blank" rel="external">Python编码规范</a><br><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-python-styleguide/" target="_blank" rel="external">Google Python 风格指南 - 中文版</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在看<a href="https://www.cs.hmc.edu/csforall/" target="_blank" rel="external">CS for All</a> 第五章，最后他给的那段代码我发现好多不一样的地方，是不一样但并不一定是错误。在open文件时]]>
    </summary>
    
      <category term="learn" scheme="http://thinkqob.github.io/tags/learn/"/>
    
      <category term="python" scheme="http://thinkqob.github.io/tags/python/"/>
    
      <category term="Python" scheme="http://thinkqob.github.io/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSforALL-4-ComputerOrganization]]></title>
    <link href="http://thinkqob.github.io/2015/11/11/CSforALL-4-ComputerOrganization/"/>
    <id>http://thinkqob.github.io/2015/11/11/CSforALL-4-ComputerOrganization/</id>
    <published>2015-11-10T16:12:33.570Z</published>
    <updated>2015-11-10T16:12:33.570Z</updated>
    <content type="html"><![CDATA[<p><a href="https://www.cs.hmc.edu/csforall/" target="_blank" rel="external">CS for All</a> 第四章讲计算机组成原理，从最基础的与非门二进制讲到汇编语言。涉及到一点离散数学，最大项最小项。感觉这章的内容不是特别重要，只是作为基础需要知道计算机的底层是怎么工作的。遇到了很多不认识的单词，要记住。大项最小项那块也不是很懂，全篇也没能很好的吸收，不过大概的意思是明白了。这章就不看第二遍了，继续往下看，遇到不懂得再查资料或者回过头来再看这章。笔记应该记录的更详细一点。</p>
<p>翻墙不稳定导致数学公式没办法显示出来，看到的都是HTML。。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://www.cs.hmc.edu/csforall/" target="_blank" rel="external">CS for All</a> 第四章讲计算机组成原理，从最基础的与非门二进制讲到汇编语言。涉及到一点离散数学，最大项最小项。感]]>
    </summary>
    
      <category term="CSforALL" scheme="http://thinkqob.github.io/tags/CSforALL/"/>
    
      <category term="assembly language" scheme="http://thinkqob.github.io/tags/assembly-language/"/>
    
      <category term="python" scheme="http://thinkqob.github.io/tags/python/"/>
    
      <category term="CSforALL" scheme="http://thinkqob.github.io/categories/CSforALL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn-Python-0000]]></title>
    <link href="http://thinkqob.github.io/2015/11/06/learn-python-0000/"/>
    <id>http://thinkqob.github.io/2015/11/06/learn-python-0000/</id>
    <published>2015-11-06T09:28:56.909Z</published>
    <updated>2015-11-06T09:28:56.909Z</updated>
    <content type="html"><![CDATA[<p>看完了 <a href="http://learnpythonthehardway.org/book/" target="_blank" rel="external">learn python the hard way</a> ,感觉什么也没学会，学到的都是片段，还没办法解决问题。对于CS知道的太少了，需要找门CS的课程来学习学习。<br>然后开始看 <a href="https://www.cs.hmc.edu/csforall/" target="_blank" rel="external">CS for All</a> 目前看到第三章，就已经补充RSA加密和质数、求导、微积分等这些早就丢给老师的东西了。因为都是英文的，我英文又一般，一章大概要看两遍才能完全理解，还是要抓紧时间看。为了能解决问题还有好多东西要学，不过学起来也蛮开心的，就是总是要跟自己的懒惰作斗争。</p>
<p>想到了几件可以做的事情：<br>    1，用python写个Engima。<br>    2，定期去TPB抓纪录片的磁力链接然后转换成种子文件下载到本地，然后丢到迅雷下载。<br>    3，写个脚本每天去zimuzi.tv签到。<br>    4，写爬虫爬网站。</p>
<p>然后除了python，git、JSON、Markdown也要了解。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>看完了 <a href="http://learnpythonthehardway.org/book/" target="_blank" rel="external">learn python the hard way</a> ,感觉什么也没学会，学到的都是片段，还没办法解]]>
    </summary>
    
      <category term="learn" scheme="http://thinkqob.github.io/tags/learn/"/>
    
      <category term="python" scheme="http://thinkqob.github.io/tags/python/"/>
    
      <category term="Python" scheme="http://thinkqob.github.io/categories/Python/"/>
    
  </entry>
  
</feed>
